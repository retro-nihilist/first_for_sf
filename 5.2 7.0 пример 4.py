
quotes_dict = {
    'Преступление и наказание': 'А знаешь ли... что низкие потолки и тесные комнаты душу и ум теснят.', 
    'Война и мир': 'И нет величия там, где нет простоты, добра и правды.', 
    'Анна Каренина': 'Если искать совершенства, то никогда не будешь доволен.', 
    'Детство': 'Правил у нас много, а правды нет.', 
    'Колесо времени': 'Ничто так на соединяет людей, как улыбка.'
}

#print(list(quotes_dict.items()))

# Функция для преобразования одного элемента списка кортежей
def preprocessing_quoutes(name_quotes_tuple):
    # Разделяем составляющие кортежа на отдельные переменные
    name, text = name_quotes_tuple
    # Приводим цитату к нижнему регистру
    text = text.lower()
    # Заменяем точки и запятые на пустые строки
    text = text.replace('.', '')
    text = text.replace(',', '')
    # Разделяем цитату на слова по пробелу
    words = text.split(' ')
    # Возвращаем кортеж из названия произведения и текста
    return (name, words)

# Проверяем, как работает функция
#test_text = ('Детство', 'Правил у нас много, а правды нет.')
#print(preprocessing_quoutes(test_text))
## ('Детство', ['правил', 'у', 'нас', 'много', 'а', 'правды', 'нет'])

# Применяем функцию processing_quoutes к списку кортежей
# Результат преобразовываем в словарь
processed_quotes_dict = dict(map(preprocessing_quoutes, quotes_dict.items()))

print(processed_quotes_dict)

## {'Преступление и наказание': ['а', 'знаешь', 'ли', 'что', 'низкие', 'потолки', 'и', 'тесные', 'комнаты', 'душу', 'и', 'ум', 'теснят'], 'Война и мир': ['и', 'нет', 'величия', 'там', 'где', 'нет', 'простоты', 'добра', 'и', 'правды'], 'Анна Каренина': ['если', 'искать', 'совершенства', 'то', 'никогда', 'не', 'будешь', 'доволен'], 'Детство': ['правил', 'у', 'нас', 'много', 'а', 'правды', 'нет'], 'Колесо времени': ['ничто', 'так', 'на', 'соединяет', 'людей', 'как', 'улыбка']}